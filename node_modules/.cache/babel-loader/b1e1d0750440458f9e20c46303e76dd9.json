{"ast":null,"code":"var _jsxFileName = \"/Users/deepthi/Front_End/React/react_learning_vishwas/src/Components/ContactDetaisUsingContextAPI/App_contactDCA.jsx\";\nimport React, { useState } from 'react';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport { contactProvider } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App_contactDCA() {\n  // const [contacts, setContacts] = useState([]);\n  // const dispatchUserEvent = (actionType, payload) => {\n  //     switch (actionType) {\n  //         case 'ADD_CONTACT': {\n  //             setContacts([...contacts, payload.newContact])\n  //             return\n  //         }\n  //         case 'DELETE_CONTACT':\n  //             {\n  //                 setContacts(contacts.filter(contact => contact.id != payload.contactId)) )\n  //                 return\n  //             }\n  //         default:\n  //             return;\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n\n_c = App_contactDCA;\nexport default App_contactDCA;\n\nvar _c;\n\n$RefreshReg$(_c, \"App_contactDCA\");","map":{"version":3,"sources":["/Users/deepthi/Front_End/React/react_learning_vishwas/src/Components/ContactDetaisUsingContextAPI/App_contactDCA.jsx"],"names":["React","useState","AddContact","ContactList","contactProvider","App_contactDCA"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,WAAhC;;;AACA,SAASC,cAAT,GAA0B;AAEtB;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH;;KA3BQA,c;AA6BT,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport { contactProvider } from './Context';\nfunction App_contactDCA() {\n\n    // const [contacts, setContacts] = useState([]);\n\n    // const dispatchUserEvent = (actionType, payload) => {\n    //     switch (actionType) {\n    //         case 'ADD_CONTACT': {\n    //             setContacts([...contacts, payload.newContact])\n    //             return\n    //         }\n\n\n    //         case 'DELETE_CONTACT':\n    //             {\n    //                 setContacts(contacts.filter(contact => contact.id != payload.contactId)) )\n    //                 return\n    //             }\n    //         default:\n    //             return;\n    //     }\n    // }\n    return <div>\n        {/* <contactProvider value={{ contacts, dispatchEventHandler }} >\n            <AddContact />\n            <ContactList />\n        </contactProvider> */}\n    </div>;\n}\n\nexport default App_contactDCA;\n"]},"metadata":{},"sourceType":"module"}