{"ast":null,"code":"var _jsxFileName = \"/Users/deepthi/Front_End/React/react_learning_vishwas/src/Components/fetchData_Reducer_Context/FetchData_reducer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intialState = {\n  loading: true,\n  error: '',\n  post: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'Fetch_sucess':\n      {\n        return { ...state,\n          loading: false,\n          post: action.payload\n        };\n      }\n\n    case 'Fetch_failure':\n      {\n        return { ...state,\n          loading: false,\n          post: '',\n          error: 'something went wrong!!'\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nfunction FetchData_reducer() {\n  _s();\n\n  const [new_state, dispatch] = useReducer(reducer, intialState);\n  useEffect(() => {\n    axios.get('https://jsonplaceholdedr.typicode.com/posts/1').then(Response => dispatch({\n      type: 'Fetch_sucess',\n      payload: Response.data\n    })).catch(error => dispatch({\n      type: 'Fetch_failure'\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [new_state.loading ? 'Loading' : new_state.post.title, new_state.error ? new_state.error : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FetchData_reducer, \"k70A7fv+FNF5cvLMVYOax+Jj8dA=\");\n\n_c = FetchData_reducer;\nexport default FetchData_reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData_reducer\");","map":{"version":3,"sources":["/Users/deepthi/Front_End/React/react_learning_vishwas/src/Components/fetchData_Reducer_Context/FetchData_reducer.jsx"],"names":["React","useEffect","useReducer","axios","intialState","loading","error","post","reducer","state","action","type","payload","FetchData_reducer","new_state","dispatch","get","then","Response","data","catch","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IADO;AAEhBC,EAAAA,KAAK,EAAE,EAFS;AAGhBC,EAAAA,IAAI,EAAE;AAHU,CAApB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AAAqB;AACjB,eAAQ,EAAE,GAAGF,KAAL;AAAYJ,UAAAA,OAAO,EAAE,KAArB;AAA4BE,UAAAA,IAAI,EAAEG,MAAM,CAACE;AAAzC,SAAR;AAEH;;AACD,SAAK,eAAL;AAAsB;AAClB,eAAQ,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,OAAO,EAAE,KAArB;AAA4BE,UAAAA,IAAI,EAAE,EAAlC;AAAsCD,UAAAA,KAAK,EAAE;AAA7C,SAAR;AACH;;AACD;AACI,aAAOG,KAAP;AATR;AAWH,CAZD;;AAcA,SAASI,iBAAT,GAA6B;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBb,UAAU,CAACM,OAAD,EAAUJ,WAAV,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACa,GAAN,CAAU,+CAAV,EACKC,IADL,CAEQC,QAAQ,IAAIH,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEM,QAAQ,CAACC;AAA1C,KAAD,CAF5B,EAIKC,KAJL,CAKQd,KAAK,IAAIS,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CALzB;AAOH,GARQ,EAQN,EARM,CAAT;AASA,sBACI;AAAA,eAEKG,SAAS,CAACT,OAAV,GAAoB,SAApB,GAAgCS,SAAS,CAACP,IAAV,CAAec,KAFpD,EAGKP,SAAS,CAACR,KAAV,GAAkBQ,SAAS,CAACR,KAA5B,GAAoC,IAHzC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArBQO,iB;;KAAAA,iB;AAuBT,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst intialState = {\n    loading: true,\n    error: '',\n    post: ''\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'Fetch_sucess': {\n            return ({ ...state, loading: false, post: action.payload })\n\n        }\n        case 'Fetch_failure': {\n            return ({ ...state, loading: false, post: '', error: 'something went wrong!!' })\n        }\n        default:\n            return state\n    }\n}\n\nfunction FetchData_reducer() {\n    const [new_state, dispatch] = useReducer(reducer, intialState)\n\n    useEffect(() => {\n        axios.get('https://jsonplaceholdedr.typicode.com/posts/1')\n            .then(\n                Response => dispatch({ type: 'Fetch_sucess', payload: Response.data })\n            )\n            .catch(\n                error => dispatch({ type: 'Fetch_failure' })\n            )\n    }, [])\n    return (\n        <div>\n\n            {new_state.loading ? 'Loading' : new_state.post.title}\n            {new_state.error ? new_state.error : null}\n\n\n        </div>\n    )\n}\n\nexport default FetchData_reducer\n"]},"metadata":{},"sourceType":"module"}