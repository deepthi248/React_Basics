{"ast":null,"code":"import './App.css';\nimport React, { useState, useReducer } from 'react';\nimport A from './Components/ContexAndUseReducer/A';\nimport { consumer, Provider, provider, userContext } from './Components/Context_API/UserContext';\nimport D from './Components/Context_API/D';\nimport B from './Components/ContexAndUseReducer/B';\nimport Counter from './Components/useReducer/Counter';\nimport Counter_Object from './Components/useReducer/Counter_Object';\nimport C from './Components/ContexAndUseReducer/C';\nexport default App;\n/*\n\ncontext_API\n\n const [message, setMessage] = useState('');\nreturn (\n  <div className=\"App\">\n    <input type=\"text\"\n      value={message}\n      onChange={event => setMessage(event.target.value)} />\n    <Provider value={message}>\n      <D />\n    </Provider>\n    <B />\n  </div >\n);\n\n*/\n\n/*\nUse reducer\nreturn (\n    <div>\n      <Counter_Object />\n    </div>\n  )\n*/\n\n/*\n\n\n// Step 2 : Create context\nexport const CounterContext = React.createContext()\n\n\nconst intialState = 0;\nconst reducer = (currState, action) => {\n  switch (action) {\n    case 'increment':\n      return currState + 1;\n    case 'decrement':\n      return currState - 1;\n    case 'reset':\n      return intialState\n  }\n}\n\n\nfunction App() {\n\n  const [newState, dispatch] = useReducer(reducer, intialState)\n  return (\n    < CounterContext.Provider value={{ counter: newState, counterDispatch: dispatch }}>\n      <p>{newState}</p>\n      <A />\n      <B />\n      <C />\n    </CounterContext.Provider >\n  )\n}*/","map":{"version":3,"sources":["/Users/deepthi/Front_End/React/react_learning_vishwas/src/App.js"],"names":["React","useState","useReducer","A","consumer","Provider","provider","userContext","D","B","Counter","Counter_Object","C","App"],"mappings":"AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,CAAP,MAAc,oCAAd;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,WAAvC,QAA0D,sCAA1D;AACA,OAAOC,CAAP,MAAc,4BAAd;AACA,OAAOC,CAAP,MAAc,oCAAd;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,CAAP,MAAc,oCAAd;AAGA,eAAeC,GAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './App.css';\nimport React, { useState, useReducer } from 'react';\nimport A from './Components/ContexAndUseReducer/A';\nimport { consumer, Provider, provider, userContext } from './Components/Context_API/UserContext';\nimport D from './Components/Context_API/D';\nimport B from './Components/ContexAndUseReducer/B';\nimport Counter from './Components/useReducer/Counter';\nimport Counter_Object from './Components/useReducer/Counter_Object';\nimport C from './Components/ContexAndUseReducer/C';\n\n\nexport default App;\n\n\n/*\n\ncontext_API\n\n const [message, setMessage] = useState('');\nreturn (\n  <div className=\"App\">\n    <input type=\"text\"\n      value={message}\n      onChange={event => setMessage(event.target.value)} />\n    <Provider value={message}>\n      <D />\n    </Provider>\n    <B />\n  </div >\n);\n\n*/\n\n/*\nUse reducer\nreturn (\n    <div>\n      <Counter_Object />\n    </div>\n  )\n*/\n\n/*\n\n\n// Step 2 : Create context\nexport const CounterContext = React.createContext()\n\n\nconst intialState = 0;\nconst reducer = (currState, action) => {\n  switch (action) {\n    case 'increment':\n      return currState + 1;\n    case 'decrement':\n      return currState - 1;\n    case 'reset':\n      return intialState\n  }\n}\n\n\nfunction App() {\n\n  const [newState, dispatch] = useReducer(reducer, intialState)\n  return (\n    < CounterContext.Provider value={{ counter: newState, counterDispatch: dispatch }}>\n      <p>{newState}</p>\n      <A />\n      <B />\n      <C />\n    </CounterContext.Provider >\n  )\n}*/"]},"metadata":{},"sourceType":"module"}